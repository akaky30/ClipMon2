kotlin version: 2.0.21
error message: org.jetbrains.kotlin.backend.common.BackendException: Backend Internal error: Exception during IR lowering
File being compiled: E:/AndroidProject/ClipMon2/app/src/main/java/com/example/clipmon2/MainActivity.kt
The root cause java.lang.RuntimeException was thrown at: org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:47)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException(CodegenUtil.kt:253)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException$default(CodegenUtil.kt:236)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:65)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:52)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:38)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:27)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:14)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:371)
	at org.jetbrains.kotlin.codegen.CodegenFactory.generateModule(CodegenFactory.kt:47)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateModuleInFrontendIRMode(JvmIrCodegenFactory.kt:433)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.generateCodeFromIr(jvmCompilerPipeline.kt:246)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.compileModulesUsingFrontendIrAndLightTree(jvmCompilerPipeline.kt:142)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:148)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:43)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:103)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:49)
	at org.jetbrains.kotlin.cli.common.CLITool.exec(CLITool.kt:101)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:464)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:73)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:506)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:423)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileNonIncrementally(IncrementalCompilerRunner.kt:301)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:129)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:675)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:92)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1660)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN LOCAL_FUNCTION_FOR_LAMBDA name:onCreate$lambda$15$lambda$14$lambda$13$lambda$12 visibility:private modality:FINAL <> ($events$delegate:androidx.compose.runtime.State<kotlin.collections.List<com.example.clipmon2.ClipEvent>>, $this$LazyColumn:androidx.compose.foundation.lazy.LazyListScope) returnType:kotlin.Unit?
  VALUE_PARAMETER BOUND_VALUE_PARAMETER name:$events$delegate index:0 type:androidx.compose.runtime.State<kotlin.collections.List<com.example.clipmon2.ClipEvent>>
  VALUE_PARAMETER name:$this$LazyColumn index:1 type:androidx.compose.foundation.lazy.LazyListScope
  BLOCK_BODY
    CALL 'public final fun items$default <T> (items: kotlin.collections.List<T of androidx.compose.foundation.lazy.LazyDslKt.items$default>, key: kotlin.Function1<@[ParameterName(name = "item")] T of androidx.compose.foundation.lazy.LazyDslKt.items$default, kotlin.Any>?, contentType: kotlin.Function1<@[ParameterName(name = "item")] T of androidx.compose.foundation.lazy.LazyDslKt.items$default, kotlin.Any?>?, itemContent: @[Composable] @[ExtensionFunctionType] kotlin.Function2<androidx.compose.foundation.lazy.LazyItemScope, @[ParameterName(name = "item")] T of androidx.compose.foundation.lazy.LazyDslKt.items$default, kotlin.Unit>, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit [inline] declared in androidx.compose.foundation.lazy.LazyDslKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
      <T>: com.example.clipmon2.ClipEvent
      $receiver: GET_VAR '$this$LazyColumn: androidx.compose.foundation.lazy.LazyListScope declared in com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12' type=androidx.compose.foundation.lazy.LazyListScope origin=null
      items: CALL 'private final fun onCreate$lambda$15$lambda$14$lambda$0 ($events$delegate: androidx.compose.runtime.State<kotlin.collections.List<com.example.clipmon2.ClipEvent>>): kotlin.collections.List<com.example.clipmon2.ClipEvent> declared in com.example.clipmon2.MainActivity' type=kotlin.collections.List<com.example.clipmon2.ClipEvent> origin=GET_LOCAL_PROPERTY
        $events$delegate: GET_VAR '$events$delegate: androidx.compose.runtime.State<kotlin.collections.List<com.example.clipmon2.ClipEvent>> declared in com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12' type=androidx.compose.runtime.State<kotlin.collections.List<com.example.clipmon2.ClipEvent>> origin=null
      key: COMPOSITE type=kotlin.Function1<@[ParameterName(name = "item")] T of androidx.compose.foundation.lazy.LazyDslKt.items$default, kotlin.Any>? origin=DEFAULT_VALUE
        CONST Null type=kotlin.Function1<@[ParameterName(name = "item")] T of androidx.compose.foundation.lazy.LazyDslKt.items$default, kotlin.Any>? value=null
      contentType: COMPOSITE type=kotlin.Function1<@[ParameterName(name = "item")] T of androidx.compose.foundation.lazy.LazyDslKt.items$default, kotlin.Any?>? origin=DEFAULT_VALUE
        CONST Null type=kotlin.Function1<@[ParameterName(name = "item")] T of androidx.compose.foundation.lazy.LazyDslKt.items$default, kotlin.Any?>? value=null
      itemContent: BLOCK type=@[ExtensionFunctionType] kotlin.Function2<androidx.compose.foundation.lazy.LazyItemScope, com.example.clipmon2.ClipEvent, kotlin.Unit> origin=LAMBDA
        COMPOSITE type=kotlin.Unit origin=null
        FUNCTION_REFERENCE 'private final fun onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11 (e: com.example.clipmon2.ClipEvent): kotlin.Unit declared in com.example.clipmon2.MainActivity' type=@[ExtensionFunctionType] kotlin.Function2<androidx.compose.foundation.lazy.LazyItemScope, com.example.clipmon2.ClipEvent, kotlin.Unit> origin=INLINE_LAMBDA reflectionTarget=null
      $mask0: CONST Int type=kotlin.Int value=6
      $handler: CONST Null type=kotlin.Any? value=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:47)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:40)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:406)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:423)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:168)
	at org.jetbrains.kotlin.backend.jvm.FileCodegen.lower(JvmPhases.kt:39)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseFactoriesKt.createFilePhase$lambda$4(PhaseFactories.kt:71)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt$createSimpleNamedCompilerPhase$1.phaseBody(PhaseBuilders.kt:69)
	at org.jetbrains.kotlin.backend.common.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:226)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:62)
	... 43 more
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN INLINE_LAMBDA name:onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11 visibility:private modality:FINAL <> ($receiver:androidx.compose.foundation.lazy.LazyItemScope, e:com.example.clipmon2.ClipEvent) returnType:kotlin.Unit
  $receiver: VALUE_PARAMETER name:$this$items type:androidx.compose.foundation.lazy.LazyItemScope
  VALUE_PARAMETER name:e index:0 type:com.example.clipmon2.ClipEvent
  BLOCK_BODY
    VAR name:$i$a$-items$default-MainActivity$onCreate$1$1$1$3$1 type:kotlin.Int [val]
      CONST Int type=kotlin.Int value=0
    CALL 'public final fun Card$default (modifier: androidx.compose.ui.Modifier?, shape: androidx.compose.ui.graphics.Shape?, colors: androidx.compose.material3.CardColors?, elevation: androidx.compose.material3.CardElevation?, border: androidx.compose.foundation.BorderStroke?, content: @[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.ColumnScope, kotlin.Unit>, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit declared in androidx.compose.material3.CardKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
      modifier: CALL 'public final fun padding-VpY3zN4$default (horizontal: androidx.compose.ui.unit.Dp, vertical: androidx.compose.ui.unit.Dp, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.ui.Modifier declared in androidx.compose.foundation.layout.PaddingKt' type=androidx.compose.ui.Modifier origin=DEFAULT_DISPATCH_CALL
        $receiver: CALL 'public final fun fillMaxWidth$default (fraction: kotlin.Float, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.ui.Modifier declared in androidx.compose.foundation.layout.SizeKt' type=androidx.compose.ui.Modifier origin=DEFAULT_DISPATCH_CALL
          $receiver: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.Modifier.Companion visibility:public [final,static] declared in androidx.compose.ui.Modifier' type=androidx.compose.ui.Modifier.Companion origin=null
          fraction: COMPOSITE type=kotlin.Float origin=DEFAULT_VALUE
            CONST Float type=kotlin.Float value=0.0
          $mask0: CONST Int type=kotlin.Int value=1
          $handler: CONST Null type=kotlin.Any? value=null
        horizontal: COMPOSITE type=androidx.compose.ui.unit.Dp origin=DEFAULT_VALUE
          CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.unit.Dp origin=null
            <T>: kotlin.Float
            <R>: androidx.compose.ui.unit.Dp
            v: CONST Float type=kotlin.Float value=0.0
        vertical: CALL 'public final fun <get-dp> (): androidx.compose.ui.unit.Dp [inline] declared in androidx.compose.ui.unit.DpKt' type=androidx.compose.ui.unit.Dp origin=GET_PROPERTY
          $receiver: CONST Int type=kotlin.Int value=4
        $mask0: CONST Int type=kotlin.Int value=1
        $handler: CONST Null type=kotlin.Any? value=null
      shape: COMPOSITE type=androidx.compose.ui.graphics.Shape? origin=DEFAULT_VALUE
        CONST Null type=androidx.compose.ui.graphics.Shape? value=null
      colors: COMPOSITE type=androidx.compose.material3.CardColors? origin=DEFAULT_VALUE
        CONST Null type=androidx.compose.material3.CardColors? value=null
      elevation: COMPOSITE type=androidx.compose.material3.CardElevation? origin=DEFAULT_VALUE
        CONST Null type=androidx.compose.material3.CardElevation? value=null
      border: COMPOSITE type=androidx.compose.foundation.BorderStroke? origin=DEFAULT_VALUE
        CONST Null type=androidx.compose.foundation.BorderStroke? value=null
      content: BLOCK type=com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided> origin=null
        CLASS LAMBDA_IMPL CLASS name:<no name provided> modality:FINAL visibility:public/*package*/ superTypes:[kotlin.Any; kotlin.Function1<androidx.compose.foundation.layout.ColumnScope, kotlin.Unit>]
          $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided>
          CONSTRUCTOR GENERATED_MEMBER_IN_CALLABLE_REFERENCE visibility:public/*package*/ <> ($e:com.example.clipmon2.ClipEvent) returnType:com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided> [primary]
            VALUE_PARAMETER BOUND_VALUE_PARAMETER name:$e index:0 type:com.example.clipmon2.ClipEvent
            BLOCK_BODY
              SET_FIELD 'FIELD FIELD_FOR_CAPTURED_VALUE name:$e type:com.example.clipmon2.ClipEvent visibility:public/*package*/ [final] declared in com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided>' type=kotlin.Unit origin=INITIALIZER_OF_FIELD_FOR_CAPTURED_VALUE
                receiver: GET_VAR '<this>: com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided> declared in com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided>' type=com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided> origin=null
                value: GET_VAR '$e: com.example.clipmon2.ClipEvent declared in com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided>.<init>' type=com.example.clipmon2.ClipEvent origin=null
              DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in kotlin.Any'
              BLOCK type=kotlin.Unit origin=null
          FUN name:invoke visibility:public modality:FINAL <> ($this:com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided>, $this$Card:androidx.compose.foundation.layout.ColumnScope) returnType:kotlin.Unit
            overridden:
              public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 [operator] declared in kotlin.Function1
            $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided>
            VALUE_PARAMETER name:$this$Card index:0 type:androidx.compose.foundation.layout.ColumnScope
            BLOCK_BODY
              CALL 'public final fun Column$default (modifier: androidx.compose.ui.Modifier?, verticalArrangement: androidx.compose.foundation.layout.Arrangement.Vertical?, horizontalAlignment: androidx.compose.ui.Alignment.Horizontal?, content: @[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.ColumnScope, kotlin.Unit>, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit [inline] declared in androidx.compose.foundation.layout.ColumnKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
                modifier: CALL 'public final fun padding-3ABfNKs (all: androidx.compose.ui.unit.Dp): androidx.compose.ui.Modifier declared in androidx.compose.foundation.layout.PaddingKt' type=androidx.compose.ui.Modifier origin=null
                  $receiver: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.Modifier.Companion visibility:public [final,static] declared in androidx.compose.ui.Modifier' type=androidx.compose.ui.Modifier.Companion origin=null
                  all: CALL 'public final fun <get-dp> (): androidx.compose.ui.unit.Dp [inline] declared in androidx.compose.ui.unit.DpKt' type=androidx.compose.ui.unit.Dp origin=GET_PROPERTY
                    $receiver: CONST Int type=kotlin.Int value=12
                verticalArrangement: COMPOSITE type=androidx.compose.foundation.layout.Arrangement.Vertical? origin=DEFAULT_VALUE
                  CONST Null type=androidx.compose.foundation.layout.Arrangement.Vertical? value=null
                horizontalAlignment: COMPOSITE type=androidx.compose.ui.Alignment.Horizontal? origin=DEFAULT_VALUE
                  CONST Null type=androidx.compose.ui.Alignment.Horizontal? value=null
                content: BLOCK type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.ColumnScope, kotlin.Unit> origin=LAMBDA
                  COMPOSITE type=kotlin.Unit origin=null
                  FUNCTION_REFERENCE 'private final fun invoke$lambda$2 ($e: com.example.clipmon2.ClipEvent): kotlin.Unit declared in com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided>' type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.ColumnScope, kotlin.Unit> origin=INLINE_LAMBDA reflectionTarget=null
                    $e: GET_FIELD 'FIELD FIELD_FOR_CAPTURED_VALUE name:$e type:com.example.clipmon2.ClipEvent visibility:public/*package*/ [final] declared in com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided>' type=com.example.clipmon2.ClipEvent origin=null
                      receiver: GET_VAR '<this>: com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided> declared in com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided>.invoke' type=com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided> origin=null
                $mask0: CONST Int type=kotlin.Int value=6
                $handler: CONST Null type=kotlin.Any? value=null
          FIELD FIELD_FOR_CAPTURED_VALUE name:$e type:com.example.clipmon2.ClipEvent visibility:public/*package*/ [final]
          FUN INLINE_LAMBDA name:invoke$lambda$2$lambda$0 visibility:private modality:FINAL <> (it:kotlin.String) returnType:kotlin.String
            VALUE_PARAMETER name:it index:0 type:kotlin.String
            BLOCK_BODY
              VAR name:$i$a$-let-MainActivity$onCreate$1$1$1$3$1$1$1$1 type:kotlin.Int [val]
                CONST Int type=kotlin.Int value=0
              RETURN type=kotlin.Nothing from='private final fun invoke$lambda$2$lambda$0 (it: kotlin.String): kotlin.String declared in com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided>'
                STRING_CONCATENATION type=kotlin.String
                  CONST String type=kotlin.String value="  top="
                  GET_VAR 'it: kotlin.String declared in com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided>.invoke$lambda$2$lambda$0' type=kotlin.String origin=null
          FUN INLINE_LAMBDA name:invoke$lambda$2$lambda$1 visibility:private modality:FINAL <> ($receiver:kotlin.collections.MutableList<kotlin.String>, $e:com.example.clipmon2.ClipEvent) returnType:kotlin.Unit
            $receiver: VALUE_PARAMETER name:$this$buildList type:kotlin.collections.MutableList<kotlin.String>
            VALUE_PARAMETER BOUND_VALUE_PARAMETER name:$e index:0 type:com.example.clipmon2.ClipEvent
            BLOCK_BODY
              VAR name:$i$a$-buildList-MainActivity$onCreate$1$1$1$3$1$1$1$flags$1 type:kotlin.Int [val]
                CONST Int type=kotlin.Int value=0
              WHEN type=kotlin.Unit origin=IF
                BRANCH
                  if: CALL 'public final fun <get-containsPhone> (): kotlin.Boolean declared in com.example.clipmon2.ClipEvent' type=kotlin.Boolean origin=GET_PROPERTY
                    $this: GET_VAR '$e: com.example.clipmon2.ClipEvent declared in com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided>.invoke$lambda$2$lambda$1' type=com.example.clipmon2.ClipEvent origin=null
                  then: COMPOSITE type=kotlin.Unit origin=null
                    CALL 'public abstract fun add (element: E of kotlin.collections.MutableList): kotlin.Boolean declared in kotlin.collections.MutableList' type=kotlin.Boolean origin=null
                      $this: GET_VAR '$this$buildList: kotlin.collections.MutableList<kotlin.String> declared in com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided>.invoke$lambda$2$lambda$1' type=kotlin.collections.MutableList<kotlin.String> origin=null
                      element: CONST String type=kotlin.String value="含手机号"
                    COMPOSITE type=kotlin.Unit origin=null
              WHEN type=kotlin.Unit origin=IF
                BRANCH
                  if: CALL 'public final fun <get-containsId> (): kotlin.Boolean declared in com.example.clipmon2.ClipEvent' type=kotlin.Boolean origin=GET_PROPERTY
                    $this: GET_VAR '$e: com.example.clipmon2.ClipEvent declared in com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided>.invoke$lambda$2$lambda$1' type=com.example.clipmon2.ClipEvent origin=null
                  then: COMPOSITE type=kotlin.Unit origin=null
                    CALL 'public abstract fun add (element: E of kotlin.collections.MutableList): kotlin.Boolean declared in kotlin.collections.MutableList' type=kotlin.Boolean origin=null
                      $this: GET_VAR '$this$buildList: kotlin.collections.MutableList<kotlin.String> declared in com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided>.invoke$lambda$2$lambda$1' type=kotlin.collections.MutableList<kotlin.String> origin=null
                      element: CONST String type=kotlin.String value="含身份证"
                    COMPOSITE type=kotlin.Unit origin=null
          FUN INLINE_LAMBDA name:invoke$lambda$2 visibility:private modality:FINAL <> ($receiver:androidx.compose.foundation.layout.ColumnScope, $e:com.example.clipmon2.ClipEvent) returnType:kotlin.Unit
            $receiver: VALUE_PARAMETER name:$this$Column type:androidx.compose.foundation.layout.ColumnScope
            VALUE_PARAMETER BOUND_VALUE_PARAMETER name:$e index:0 type:com.example.clipmon2.ClipEvent
            BLOCK_BODY
              VAR name:$i$a$-Column$default-MainActivity$onCreate$1$1$1$3$1$1$1 type:kotlin.Int [val]
                CONST Int type=kotlin.Int value=0
              CALL 'public final fun Text-80ic1_w$default (text: kotlin.String, modifier: androidx.compose.ui.Modifier?, color: androidx.compose.ui.graphics.Color, fontSize: androidx.compose.ui.unit.TextUnit, fontStyle: androidx.compose.ui.text.font.FontStyle?, fontWeight: androidx.compose.ui.text.font.FontWeight?, fontFamily: androidx.compose.ui.text.font.FontFamily?, letterSpacing: androidx.compose.ui.unit.TextUnit, textDecoration: androidx.compose.ui.text.style.TextDecoration?, textAlign: androidx.compose.ui.text.style.TextAlign?, lineHeight: androidx.compose.ui.unit.TextUnit, overflow: androidx.compose.ui.text.style.TextOverflow, softWrap: kotlin.Boolean, maxLines: kotlin.Int, minLines: kotlin.Int, onTextLayout: kotlin.Function1<androidx.compose.ui.text.TextLayoutResult, kotlin.Unit>?, style: androidx.compose.ui.text.TextStyle?, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit declared in androidx.compose.material3.TextKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
                text: STRING_CONCATENATION type=kotlin.String
                  CALL 'public open fun format (p0: @[FlexibleNullability] kotlin.CharSequence?, p1: kotlin.Long): @[FlexibleNullability] kotlin.CharSequence? declared in android.text.format.DateFormat' type=@[FlexibleNullability] kotlin.CharSequence? origin=null
                    p0: CONST String type=kotlin.String value="MM-dd HH:mm:ss"
                    p1: CALL 'public final fun <get-ts> (): kotlin.Long declared in com.example.clipmon2.ClipEvent' type=kotlin.Long origin=GET_PROPERTY
                      $this: GET_VAR '$e: com.example.clipmon2.ClipEvent declared in com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided>.invoke$lambda$2' type=com.example.clipmon2.ClipEvent origin=null
                  CONST String type=kotlin.String value="  "
                  CALL 'public final fun <get-type> (): kotlin.String declared in com.example.clipmon2.ClipEvent' type=kotlin.String origin=GET_PROPERTY
                    $this: GET_VAR '$e: com.example.clipmon2.ClipEvent declared in com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided>.invoke$lambda$2' type=com.example.clipmon2.ClipEvent origin=null
                  BLOCK type=kotlin.String origin=FOLDED_ELVIS
                    WHEN type=kotlin.String origin=FOLDED_ELVIS
                      BRANCH
                        if: CALL 'public final fun ANDAND (arg0: kotlin.Boolean, arg1: kotlin.Boolean): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
                          arg0: COMPOSITE type=kotlin.Boolean origin=null
                            VAR IR_TEMPORARY_VARIABLE name:tmp0_safe_receiver type:kotlin.String? [val]
                              CALL 'public final fun <get-topApp> (): kotlin.String? declared in com.example.clipmon2.ClipEvent' type=kotlin.String? origin=GET_PROPERTY
                                $this: GET_VAR '$e: com.example.clipmon2.ClipEvent declared in com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided>.invoke$lambda$2' type=com.example.clipmon2.ClipEvent origin=null
                            CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=null
                              $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
                                arg0: GET_VAR 'val tmp0_safe_receiver: kotlin.String? [val] declared in com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided>.invoke$lambda$2' type=kotlin.String? origin=null
                                arg1: CONST Null type=kotlin.Nothing? value=null
                          arg1: COMPOSITE type=kotlin.Boolean origin=null
                            VAR IR_TEMPORARY_VARIABLE name:tmp1_elvis_lhs type:kotlin.String [val]
                              CALL 'public final fun let <T, R> (block: kotlin.Function1<T of kotlin.StandardKt.let, R of kotlin.StandardKt.let>): R of kotlin.StandardKt.let [inline] declared in kotlin.StandardKt' type=kotlin.String origin=null
                                <T>: kotlin.String
                                <R>: kotlin.String
                                $receiver: GET_VAR 'val tmp0_safe_receiver: kotlin.String? [val] declared in com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided>.invoke$lambda$2' type=kotlin.String? origin=null
                                block: BLOCK type=kotlin.Function1<kotlin.String, kotlin.String> origin=LAMBDA
                                  COMPOSITE type=kotlin.Unit origin=null
                                  FUNCTION_REFERENCE 'private final fun invoke$lambda$2$lambda$0 (it: kotlin.String): kotlin.String declared in com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided>' type=kotlin.Function1<kotlin.String, kotlin.String> origin=INLINE_LAMBDA reflectionTarget=null
                            CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=null
                              $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
                                arg0: GET_VAR 'val tmp1_elvis_lhs: kotlin.String [val] declared in com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided>.invoke$lambda$2' type=kotlin.String origin=null
                                arg1: CONST Null type=kotlin.Nothing? value=null
                        then: GET_VAR 'val tmp1_elvis_lhs: kotlin.String [val] declared in com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided>.invoke$lambda$2' type=kotlin.String origin=null
                      BRANCH
                        if: CONST Boolean type=kotlin.Boolean value=true
                        then: CONST String type=kotlin.String value=""
                modifier: COMPOSITE type=androidx.compose.ui.Modifier? origin=DEFAULT_VALUE
                  CONST Null type=androidx.compose.ui.Modifier? value=null
                color: COMPOSITE type=androidx.compose.ui.graphics.Color origin=DEFAULT_VALUE
                  CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.graphics.Color origin=null
                    <T>: kotlin.Long
                    <R>: androidx.compose.ui.graphics.Color
                    v: CONST Long type=kotlin.Long value=0
                fontSize: COMPOSITE type=androidx.compose.ui.unit.TextUnit origin=DEFAULT_VALUE
                  CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.unit.TextUnit origin=null
                    <T>: kotlin.Long
                    <R>: androidx.compose.ui.unit.TextUnit
                    v: CONST Long type=kotlin.Long value=0
                fontStyle: COMPOSITE type=androidx.compose.ui.text.font.FontStyle? origin=DEFAULT_VALUE
                  CONST Null type=androidx.compose.ui.text.font.FontStyle? value=null
                fontWeight: COMPOSITE type=androidx.compose.ui.text.font.FontWeight? origin=DEFAULT_VALUE
                  CONST Null type=androidx.compose.ui.text.font.FontWeight? value=null
                fontFamily: COMPOSITE type=androidx.compose.ui.text.font.FontFamily? origin=DEFAULT_VALUE
                  CONST Null type=androidx.compose.ui.text.font.FontFamily? value=null
                letterSpacing: COMPOSITE type=androidx.compose.ui.unit.TextUnit origin=DEFAULT_VALUE
                  CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.unit.TextUnit origin=null
                    <T>: kotlin.Long
                    <R>: androidx.compose.ui.unit.TextUnit
                    v: CONST Long type=kotlin.Long value=0
                textDecoration: COMPOSITE type=androidx.compose.ui.text.style.TextDecoration? origin=DEFAULT_VALUE
                  CONST Null type=androidx.compose.ui.text.style.TextDecoration? value=null
                textAlign: COMPOSITE type=androidx.compose.ui.text.style.TextAlign? origin=DEFAULT_VALUE
                  CONST Null type=androidx.compose.ui.text.style.TextAlign? value=null
                lineHeight: COMPOSITE type=androidx.compose.ui.unit.TextUnit origin=DEFAULT_VALUE
                  CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.unit.TextUnit origin=null
                    <T>: kotlin.Long
                    <R>: androidx.compose.ui.unit.TextUnit
                    v: CONST Long type=kotlin.Long value=0
                overflow: COMPOSITE type=androidx.compose.ui.text.style.TextOverflow origin=DEFAULT_VALUE
                  CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.text.style.TextOverflow origin=null
                    <T>: kotlin.Int
                    <R>: androidx.compose.ui.text.style.TextOverflow
                    v: CONST Int type=kotlin.Int value=0
                softWrap: COMPOSITE type=kotlin.Boolean origin=DEFAULT_VALUE
                  CONST Boolean type=kotlin.Boolean value=false
                maxLines: COMPOSITE type=kotlin.Int origin=DEFAULT_VALUE
                  CONST Int type=kotlin.Int value=0
                minLines: COMPOSITE type=kotlin.Int origin=DEFAULT_VALUE
                  CONST Int type=kotlin.Int value=0
                onTextLayout: COMPOSITE type=kotlin.Function1<androidx.compose.ui.text.TextLayoutResult, kotlin.Unit>? origin=DEFAULT_VALUE
                  CONST Null type=kotlin.Function1<androidx.compose.ui.text.TextLayoutResult, kotlin.Unit>? value=null
                style: COMPOSITE type=androidx.compose.ui.text.TextStyle? origin=DEFAULT_VALUE
                  CONST Null type=androidx.compose.ui.text.TextStyle? value=null
                $mask0: CONST Int type=kotlin.Int value=131070
                $handler: CONST Null type=kotlin.Any? value=null
              VAR name:flags type:kotlin.String [val]
                CALL 'public final fun joinToString$default <T> (separator: kotlin.CharSequence?, prefix: kotlin.CharSequence?, postfix: kotlin.CharSequence?, limit: kotlin.Int, truncated: kotlin.CharSequence?, transform: kotlin.Function1<T of kotlin.collections.CollectionsKt.joinToString$default, kotlin.CharSequence>?, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.String declared in kotlin.collections.CollectionsKt' type=kotlin.String origin=DEFAULT_DISPATCH_CALL
                  <T>: kotlin.String
                  $receiver: CALL 'public final fun buildList <E> (builderAction: @[ExtensionFunctionType] kotlin.Function1<kotlin.collections.MutableList<E of kotlin.collections.CollectionsKt.buildList>, kotlin.Unit>): kotlin.collections.List<E of kotlin.collections.CollectionsKt.buildList> [inline] declared in kotlin.collections.CollectionsKt' type=kotlin.collections.List<kotlin.String> origin=null
                    <E>: kotlin.String
                    builderAction: BLOCK type=@[ExtensionFunctionType] kotlin.Function1<kotlin.collections.MutableList<kotlin.String>, kotlin.Unit> origin=LAMBDA
                      COMPOSITE type=kotlin.Unit origin=null
                      FUNCTION_REFERENCE 'private final fun invoke$lambda$2$lambda$1 ($e: com.example.clipmon2.ClipEvent): kotlin.Unit declared in com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided>' type=@[ExtensionFunctionType] kotlin.Function1<kotlin.collections.MutableList<kotlin.String>, kotlin.Unit> origin=INLINE_LAMBDA reflectionTarget=null
                        $e: GET_VAR '$e: com.example.clipmon2.ClipEvent declared in com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided>.invoke$lambda$2' type=com.example.clipmon2.ClipEvent origin=null
                  separator: CONST String type=kotlin.String value=" / "
                  prefix: COMPOSITE type=kotlin.CharSequence? origin=DEFAULT_VALUE
                    CONST Null type=kotlin.CharSequence? value=null
                  postfix: COMPOSITE type=kotlin.CharSequence? origin=DEFAULT_VALUE
                    CONST Null type=kotlin.CharSequence? value=null
                  limit: COMPOSITE type=kotlin.Int origin=DEFAULT_VALUE
                    CONST Int type=kotlin.Int value=0
                  truncated: COMPOSITE type=kotlin.CharSequence? origin=DEFAULT_VALUE
                    CONST Null type=kotlin.CharSequence? value=null
                  transform: COMPOSITE type=kotlin.Function1<T of kotlin.collections.CollectionsKt.joinToString$default, kotlin.CharSequence>? origin=DEFAULT_VALUE
                    CONST Null type=kotlin.Function1<T of kotlin.collections.CollectionsKt.joinToString$default, kotlin.CharSequence>? value=null
                  $mask0: CONST Int type=kotlin.Int value=62
                  $handler: CONST Null type=kotlin.Any? value=null
              WHEN type=kotlin.Unit origin=IF
                BRANCH
                  if: CALL 'public final fun isNotEmpty (): kotlin.Boolean [inline] declared in kotlin.text.StringsKt' type=kotlin.Boolean origin=null
                    $receiver: GET_VAR 'val flags: kotlin.String [val] declared in com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided>.invoke$lambda$2' type=kotlin.String origin=null
                  then: CALL 'public final fun Text-80ic1_w$default (text: kotlin.String, modifier: androidx.compose.ui.Modifier?, color: androidx.compose.ui.graphics.Color, fontSize: androidx.compose.ui.unit.TextUnit, fontStyle: androidx.compose.ui.text.font.FontStyle?, fontWeight: androidx.compose.ui.text.font.FontWeight?, fontFamily: androidx.compose.ui.text.font.FontFamily?, letterSpacing: androidx.compose.ui.unit.TextUnit, textDecoration: androidx.compose.ui.text.style.TextDecoration?, textAlign: androidx.compose.ui.text.style.TextAlign?, lineHeight: androidx.compose.ui.unit.TextUnit, overflow: androidx.compose.ui.text.style.TextOverflow, softWrap: kotlin.Boolean, maxLines: kotlin.Int, minLines: kotlin.Int, onTextLayout: kotlin.Function1<androidx.compose.ui.text.TextLayoutResult, kotlin.Unit>?, style: androidx.compose.ui.text.TextStyle?, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit declared in androidx.compose.material3.TextKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
                    text: GET_VAR 'val flags: kotlin.String [val] declared in com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided>.invoke$lambda$2' type=kotlin.String origin=null
                    modifier: COMPOSITE type=androidx.compose.ui.Modifier? origin=DEFAULT_VALUE
                      CONST Null type=androidx.compose.ui.Modifier? value=null
                    color: CALL 'public final fun getRed-0d7_KjU (): androidx.compose.ui.graphics.Color declared in androidx.compose.ui.graphics.Color.Companion' type=androidx.compose.ui.graphics.Color origin=GET_PROPERTY
                      $this: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.graphics.Color.Companion visibility:public [final,static] declared in androidx.compose.ui.graphics.Color' type=androidx.compose.ui.graphics.Color.Companion origin=null
                    fontSize: COMPOSITE type=androidx.compose.ui.unit.TextUnit origin=DEFAULT_VALUE
                      CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.unit.TextUnit origin=null
                        <T>: kotlin.Long
                        <R>: androidx.compose.ui.unit.TextUnit
                        v: CONST Long type=kotlin.Long value=0
                    fontStyle: COMPOSITE type=androidx.compose.ui.text.font.FontStyle? origin=DEFAULT_VALUE
                      CONST Null type=androidx.compose.ui.text.font.FontStyle? value=null
                    fontWeight: COMPOSITE type=androidx.compose.ui.text.font.FontWeight? origin=DEFAULT_VALUE
                      CONST Null type=androidx.compose.ui.text.font.FontWeight? value=null
                    fontFamily: COMPOSITE type=androidx.compose.ui.text.font.FontFamily? origin=DEFAULT_VALUE
                      CONST Null type=androidx.compose.ui.text.font.FontFamily? value=null
                    letterSpacing: COMPOSITE type=androidx.compose.ui.unit.TextUnit origin=DEFAULT_VALUE
                      CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.unit.TextUnit origin=null
                        <T>: kotlin.Long
                        <R>: androidx.compose.ui.unit.TextUnit
                        v: CONST Long type=kotlin.Long value=0
                    textDecoration: COMPOSITE type=androidx.compose.ui.text.style.TextDecoration? origin=DEFAULT_VALUE
                      CONST Null type=androidx.compose.ui.text.style.TextDecoration? value=null
                    textAlign: COMPOSITE type=androidx.compose.ui.text.style.TextAlign? origin=DEFAULT_VALUE
                      CONST Null type=androidx.compose.ui.text.style.TextAlign? value=null
                    lineHeight: COMPOSITE type=androidx.compose.ui.unit.TextUnit origin=DEFAULT_VALUE
                      CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.unit.TextUnit origin=null
                        <T>: kotlin.Long
                        <R>: androidx.compose.ui.unit.TextUnit
                        v: CONST Long type=kotlin.Long value=0
                    overflow: COMPOSITE type=androidx.compose.ui.text.style.TextOverflow origin=DEFAULT_VALUE
                      CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.text.style.TextOverflow origin=null
                        <T>: kotlin.Int
                        <R>: androidx.compose.ui.text.style.TextOverflow
                        v: CONST Int type=kotlin.Int value=0
                    softWrap: COMPOSITE type=kotlin.Boolean origin=DEFAULT_VALUE
                      CONST Boolean type=kotlin.Boolean value=false
                    maxLines: COMPOSITE type=kotlin.Int origin=DEFAULT_VALUE
                      CONST Int type=kotlin.Int value=0
                    minLines: COMPOSITE type=kotlin.Int origin=DEFAULT_VALUE
                      CONST Int type=kotlin.Int value=0
                    onTextLayout: COMPOSITE type=kotlin.Function1<androidx.compose.ui.text.TextLayoutResult, kotlin.Unit>? origin=DEFAULT_VALUE
                      CONST Null type=kotlin.Function1<androidx.compose.ui.text.TextLayoutResult, kotlin.Unit>? value=null
                    style: COMPOSITE type=androidx.compose.ui.text.TextStyle? origin=DEFAULT_VALUE
                      CONST Null type=androidx.compose.ui.text.TextStyle? value=null
                    $mask0: CONST Int type=kotlin.Int value=131066
                    $handler: CONST Null type=kotlin.Any? value=null
              CALL 'public final fun Text-80ic1_w$default (text: kotlin.String, modifier: androidx.compose.ui.Modifier?, color: androidx.compose.ui.graphics.Color, fontSize: androidx.compose.ui.unit.TextUnit, fontStyle: androidx.compose.ui.text.font.FontStyle?, fontWeight: androidx.compose.ui.text.font.FontWeight?, fontFamily: androidx.compose.ui.text.font.FontFamily?, letterSpacing: androidx.compose.ui.unit.TextUnit, textDecoration: androidx.compose.ui.text.style.TextDecoration?, textAlign: androidx.compose.ui.text.style.TextAlign?, lineHeight: androidx.compose.ui.unit.TextUnit, overflow: androidx.compose.ui.text.style.TextOverflow, softWrap: kotlin.Boolean, maxLines: kotlin.Int, minLines: kotlin.Int, onTextLayout: kotlin.Function1<androidx.compose.ui.text.TextLayoutResult, kotlin.Unit>?, style: androidx.compose.ui.text.TextStyle?, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit declared in androidx.compose.material3.TextKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
                text: STRING_CONCATENATION type=kotlin.String
                  CONST String type=kotlin.String value="len="
                  CALL 'public final fun <get-rawLen> (): kotlin.Int declared in com.example.clipmon2.ClipEvent' type=kotlin.Int origin=GET_PROPERTY
                    $this: GET_VAR '$e: com.example.clipmon2.ClipEvent declared in com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided>.invoke$lambda$2' type=com.example.clipmon2.ClipEvent origin=null
                modifier: COMPOSITE type=androidx.compose.ui.Modifier? origin=DEFAULT_VALUE
                  CONST Null type=androidx.compose.ui.Modifier? value=null
                color: COMPOSITE type=androidx.compose.ui.graphics.Color origin=DEFAULT_VALUE
                  CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.graphics.Color origin=null
                    <T>: kotlin.Long
                    <R>: androidx.compose.ui.graphics.Color
                    v: CONST Long type=kotlin.Long value=0
                fontSize: COMPOSITE type=androidx.compose.ui.unit.TextUnit origin=DEFAULT_VALUE
                  CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.unit.TextUnit origin=null
                    <T>: kotlin.Long
                    <R>: androidx.compose.ui.unit.TextUnit
                    v: CONST Long type=kotlin.Long value=0
                fontStyle: COMPOSITE type=androidx.compose.ui.text.font.FontStyle? origin=DEFAULT_VALUE
                  CONST Null type=androidx.compose.ui.text.font.FontStyle? value=null
                fontWeight: COMPOSITE type=androidx.compose.ui.text.font.FontWeight? origin=DEFAULT_VALUE
                  CONST Null type=androidx.compose.ui.text.font.FontWeight? value=null
                fontFamily: COMPOSITE type=androidx.compose.ui.text.font.FontFamily? origin=DEFAULT_VALUE
                  CONST Null type=androidx.compose.ui.text.font.FontFamily? value=null
                letterSpacing: COMPOSITE type=androidx.compose.ui.unit.TextUnit origin=DEFAULT_VALUE
                  CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.unit.TextUnit origin=null
                    <T>: kotlin.Long
                    <R>: androidx.compose.ui.unit.TextUnit
                    v: CONST Long type=kotlin.Long value=0
                textDecoration: COMPOSITE type=androidx.compose.ui.text.style.TextDecoration? origin=DEFAULT_VALUE
                  CONST Null type=androidx.compose.ui.text.style.TextDecoration? value=null
                textAlign: COMPOSITE type=androidx.compose.ui.text.style.TextAlign? origin=DEFAULT_VALUE
                  CONST Null type=androidx.compose.ui.text.style.TextAlign? value=null
                lineHeight: COMPOSITE type=androidx.compose.ui.unit.TextUnit origin=DEFAULT_VALUE
                  CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.unit.TextUnit origin=null
                    <T>: kotlin.Long
                    <R>: androidx.compose.ui.unit.TextUnit
                    v: CONST Long type=kotlin.Long value=0
                overflow: COMPOSITE type=androidx.compose.ui.text.style.TextOverflow origin=DEFAULT_VALUE
                  CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.text.style.TextOverflow origin=null
                    <T>: kotlin.Int
                    <R>: androidx.compose.ui.text.style.TextOverflow
                    v: CONST Int type=kotlin.Int value=0
                softWrap: COMPOSITE type=kotlin.Boolean origin=DEFAULT_VALUE
                  CONST Boolean type=kotlin.Boolean value=false
                maxLines: COMPOSITE type=kotlin.Int origin=DEFAULT_VALUE
                  CONST Int type=kotlin.Int value=0
                minLines: COMPOSITE type=kotlin.Int origin=DEFAULT_VALUE
                  CONST Int type=kotlin.Int value=0
                onTextLayout: COMPOSITE type=kotlin.Function1<androidx.compose.ui.text.TextLayoutResult, kotlin.Unit>? origin=DEFAULT_VALUE
                  CONST Null type=kotlin.Function1<androidx.compose.ui.text.TextLayoutResult, kotlin.Unit>? value=null
                style: COMPOSITE type=androidx.compose.ui.text.TextStyle? origin=DEFAULT_VALUE
                  CONST Null type=androidx.compose.ui.text.TextStyle? value=null
                $mask0: CONST Int type=kotlin.Int value=131070
                $handler: CONST Null type=kotlin.Any? value=null
              CALL 'public final fun Text-80ic1_w$default (text: kotlin.String, modifier: androidx.compose.ui.Modifier?, color: androidx.compose.ui.graphics.Color, fontSize: androidx.compose.ui.unit.TextUnit, fontStyle: androidx.compose.ui.text.font.FontStyle?, fontWeight: androidx.compose.ui.text.font.FontWeight?, fontFamily: androidx.compose.ui.text.font.FontFamily?, letterSpacing: androidx.compose.ui.unit.TextUnit, textDecoration: androidx.compose.ui.text.style.TextDecoration?, textAlign: androidx.compose.ui.text.style.TextAlign?, lineHeight: androidx.compose.ui.unit.TextUnit, overflow: androidx.compose.ui.text.style.TextOverflow, softWrap: kotlin.Boolean, maxLines: kotlin.Int, minLines: kotlin.Int, onTextLayout: kotlin.Function1<androidx.compose.ui.text.TextLayoutResult, kotlin.Unit>?, style: androidx.compose.ui.text.TextStyle?, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit declared in androidx.compose.material3.TextKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
                text: CALL 'public final fun <get-preview> (): kotlin.String declared in com.example.clipmon2.ClipEvent' type=kotlin.String origin=GET_PROPERTY
                  $this: GET_VAR '$e: com.example.clipmon2.ClipEvent declared in com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided>.invoke$lambda$2' type=com.example.clipmon2.ClipEvent origin=null
                modifier: COMPOSITE type=androidx.compose.ui.Modifier? origin=DEFAULT_VALUE
                  CONST Null type=androidx.compose.ui.Modifier? value=null
                color: COMPOSITE type=androidx.compose.ui.graphics.Color origin=DEFAULT_VALUE
                  CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.graphics.Color origin=null
                    <T>: kotlin.Long
                    <R>: androidx.compose.ui.graphics.Color
                    v: CONST Long type=kotlin.Long value=0
                fontSize: COMPOSITE type=androidx.compose.ui.unit.TextUnit origin=DEFAULT_VALUE
                  CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.unit.TextUnit origin=null
                    <T>: kotlin.Long
                    <R>: androidx.compose.ui.unit.TextUnit
                    v: CONST Long type=kotlin.Long value=0
                fontStyle: COMPOSITE type=androidx.compose.ui.text.font.FontStyle? origin=DEFAULT_VALUE
                  CONST Null type=androidx.compose.ui.text.font.FontStyle? value=null
                fontWeight: COMPOSITE type=androidx.compose.ui.text.font.FontWeight? origin=DEFAULT_VALUE
                  CONST Null type=androidx.compose.ui.text.font.FontWeight? value=null
                fontFamily: COMPOSITE type=androidx.compose.ui.text.font.FontFamily? origin=DEFAULT_VALUE
                  CONST Null type=androidx.compose.ui.text.font.FontFamily? value=null
                letterSpacing: COMPOSITE type=androidx.compose.ui.unit.TextUnit origin=DEFAULT_VALUE
                  CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.unit.TextUnit origin=null
                    <T>: kotlin.Long
                    <R>: androidx.compose.ui.unit.TextUnit
                    v: CONST Long type=kotlin.Long value=0
                textDecoration: COMPOSITE type=androidx.compose.ui.text.style.TextDecoration? origin=DEFAULT_VALUE
                  CONST Null type=androidx.compose.ui.text.style.TextDecoration? value=null
                textAlign: COMPOSITE type=androidx.compose.ui.text.style.TextAlign? origin=DEFAULT_VALUE
                  CONST Null type=androidx.compose.ui.text.style.TextAlign? value=null
                lineHeight: COMPOSITE type=androidx.compose.ui.unit.TextUnit origin=DEFAULT_VALUE
                  CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.unit.TextUnit origin=null
                    <T>: kotlin.Long
                    <R>: androidx.compose.ui.unit.TextUnit
                    v: CONST Long type=kotlin.Long value=0
                overflow: COMPOSITE type=androidx.compose.ui.text.style.TextOverflow origin=DEFAULT_VALUE
                  CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.text.style.TextOverflow origin=null
                    <T>: kotlin.Int
                    <R>: androidx.compose.ui.text.style.TextOverflow
                    v: CONST Int type=kotlin.Int value=0
                softWrap: COMPOSITE type=kotlin.Boolean origin=DEFAULT_VALUE
                  CONST Boolean type=kotlin.Boolean value=false
                maxLines: COMPOSITE type=kotlin.Int origin=DEFAULT_VALUE
                  CONST Int type=kotlin.Int value=0
                minLines: COMPOSITE type=kotlin.Int origin=DEFAULT_VALUE
                  CONST Int type=kotlin.Int value=0
                onTextLayout: COMPOSITE type=kotlin.Function1<androidx.compose.ui.text.TextLayoutResult, kotlin.Unit>? origin=DEFAULT_VALUE
                  CONST Null type=kotlin.Function1<androidx.compose.ui.text.TextLayoutResult, kotlin.Unit>? value=null
                style: COMPOSITE type=androidx.compose.ui.text.TextStyle? origin=DEFAULT_VALUE
                  CONST Null type=androidx.compose.ui.text.TextStyle? value=null
                $mask0: CONST Int type=kotlin.Int value=131070
                $handler: CONST Null type=kotlin.Any? value=null
          FUN BRIDGE name:invoke visibility:public modality:OPEN <> ($this:com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided>, p1:kotlin.Any?) returnType:kotlin.Any?
            $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided>
            VALUE_PARAMETER BRIDGE name:p1 index:0 type:kotlin.Any?
            EXPRESSION_BODY
              RETURN type=kotlin.Nothing from='public open fun invoke (p1: kotlin.Any?): kotlin.Any? declared in com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided>'
                CALL 'public final fun invoke ($this$Card: androidx.compose.foundation.layout.ColumnScope): kotlin.Unit declared in com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided>' type=kotlin.Unit origin=BRIDGE_DELEGATION
                  $this: GET_VAR '<this>: com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided> declared in com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided>.invoke' type=com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided> origin=null
                  $this$Card: TYPE_OP type=androidx.compose.foundation.layout.ColumnScope origin=IMPLICIT_CAST typeOperand=androidx.compose.foundation.layout.ColumnScope
                    GET_VAR 'p1: kotlin.Any? declared in com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided>.invoke' type=kotlin.Any? origin=null
        CONSTRUCTOR_CALL 'public/*package*/ constructor <init> ($e: com.example.clipmon2.ClipEvent) [primary] declared in com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided>' type=com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided> origin=null
          $e: GET_VAR 'e: com.example.clipmon2.ClipEvent declared in com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11' type=com.example.clipmon2.ClipEvent origin=null
      $mask0: CONST Int type=kotlin.Int value=30
      $handler: CONST Null type=kotlin.Any? value=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:47)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.generateLambdaBody(IrSourceCompilerForInline.kt:67)
	at org.jetbrains.kotlin.codegen.inline.ExpressionLambda.generateLambdaBody(LambdaInfo.kt:72)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genValueAndPut(IrInlineCodegen.kt:100)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall$handleParameter(ExpressionCodegen.kt:616)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:644)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:579)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:584)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:240)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:123)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:44)
	... 53 more
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN name:invoke visibility:public modality:FINAL <> ($this:com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided>, $this$Card:androidx.compose.foundation.layout.ColumnScope) returnType:kotlin.Unit
  overridden:
    public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 [operator] declared in kotlin.Function1
  $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided>
  VALUE_PARAMETER name:$this$Card index:0 type:androidx.compose.foundation.layout.ColumnScope
  BLOCK_BODY
    CALL 'public final fun Column$default (modifier: androidx.compose.ui.Modifier?, verticalArrangement: androidx.compose.foundation.layout.Arrangement.Vertical?, horizontalAlignment: androidx.compose.ui.Alignment.Horizontal?, content: @[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.ColumnScope, kotlin.Unit>, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit [inline] declared in androidx.compose.foundation.layout.ColumnKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
      modifier: CALL 'public final fun padding-3ABfNKs (all: androidx.compose.ui.unit.Dp): androidx.compose.ui.Modifier declared in androidx.compose.foundation.layout.PaddingKt' type=androidx.compose.ui.Modifier origin=null
        $receiver: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.Modifier.Companion visibility:public [final,static] declared in androidx.compose.ui.Modifier' type=androidx.compose.ui.Modifier.Companion origin=null
        all: CALL 'public final fun <get-dp> (): androidx.compose.ui.unit.Dp [inline] declared in androidx.compose.ui.unit.DpKt' type=androidx.compose.ui.unit.Dp origin=GET_PROPERTY
          $receiver: CONST Int type=kotlin.Int value=12
      verticalArrangement: COMPOSITE type=androidx.compose.foundation.layout.Arrangement.Vertical? origin=DEFAULT_VALUE
        CONST Null type=androidx.compose.foundation.layout.Arrangement.Vertical? value=null
      horizontalAlignment: COMPOSITE type=androidx.compose.ui.Alignment.Horizontal? origin=DEFAULT_VALUE
        CONST Null type=androidx.compose.ui.Alignment.Horizontal? value=null
      content: BLOCK type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.ColumnScope, kotlin.Unit> origin=LAMBDA
        COMPOSITE type=kotlin.Unit origin=null
        FUNCTION_REFERENCE 'private final fun invoke$lambda$2 ($e: com.example.clipmon2.ClipEvent): kotlin.Unit declared in com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided>' type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.ColumnScope, kotlin.Unit> origin=INLINE_LAMBDA reflectionTarget=null
          $e: GET_FIELD 'FIELD FIELD_FOR_CAPTURED_VALUE name:$e type:com.example.clipmon2.ClipEvent visibility:public/*package*/ [final] declared in com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided>' type=com.example.clipmon2.ClipEvent origin=null
            receiver: GET_VAR '<this>: com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided> declared in com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided>.invoke' type=com.example.clipmon2.MainActivity.onCreate$lambda$15$lambda$14$lambda$13$lambda$12$lambda$11.<no name provided> origin=null
      $mask0: CONST Int type=kotlin.Int value=6
      $handler: CONST Null type=kotlin.Any? value=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:47)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:40)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:406)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:423)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:168)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitClass(ExpressionCodegen.kt:1000)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitClass(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.declarations.IrClass.accept(IrClass.kt:72)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:579)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitContainerExpression(ExpressionCodegen.kt:593)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitContainerExpression(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.visitors.IrElementVisitor$DefaultImpls.visitBlock(IrElementVisitor.kt:122)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlock(ExpressionCodegen.kt:413)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlock(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.expressions.IrBlock.accept(IrBlock.kt:18)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.gen(ExpressionCodegen.kt:217)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrCallGenerator.genValueAndPut(IrCallGenerator.kt:48)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall$handleParameter(ExpressionCodegen.kt:616)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:644)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:579)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:584)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:240)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:123)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:44)
	... 67 more
Caused by: org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Couldn't inline method call: CALL 'public final fun Column$default (modifier: androidx.compose.ui.Modifier?, verticalArrangement: androidx.compose.foundation.layout.Arrangement.Vertical?, horizontalAlignment: androidx.compose.ui.Alignment.Horizontal?, content: @[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.ColumnScope, kotlin.Unit>, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit [inline] declared in androidx.compose.foundation.layout.ColumnKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
Method: null
File is unknown
The root cause java.lang.IllegalStateException was thrown at: org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:65)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:163)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCallGenerator.genCall(IrInlineCallGenerator.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:653)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:579)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:584)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:240)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:123)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:44)
	... 94 more
Caused by: java.lang.IllegalStateException: couldn't find inline method Landroidx/compose/foundation/layout/ColumnKt;.Column$default(Landroidx/compose/ui/Modifier;Landroidx/compose/foundation/layout/Arrangement$Vertical;Landroidx/compose/ui/Alignment$Horizontal;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction(SourceCompilerForInline.kt:96)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.compileInlineFunction(IrSourceCompilerForInline.kt:91)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.compileInline(InlineCodegen.kt:43)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:51)
	... 106 more


